import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useTranslation } from 'react-i18next';

const FloodAlert = () => {
  const [floodRisk, setFloodRisk] = useState(0);
  const [floodWarning, setFloodWarning] = useState(false);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const navigate = useNavigate();

  const fetchFloodData = async (latitude, longitude) => {
    try {
      setLoading(true);
      const url = `https://flood-api.open-meteo.com/v1/flood?latitude=${latitude}&longitude=${longitude}&daily=river_discharge`;
      const response = await fetch(url);
      if (!response.ok) throw new Error('‡≤°‡≥á‡≤ü‡≤æ ‡≤™‡≤°‡≥Ü‡≤Ø‡≤≤‡≥Å ‡≤∏‡≤æ‡≤ß‡≥ç‡≤Ø‡≤µ‡≤æ‡≤ó‡≤≤‡≤ø‡≤≤‡≥ç‡≤≤');
      
      const data = await response.json();
      if (!data.daily?.river_discharge) throw new Error('‡≤Ö‡≤Æ‡≤æ‡≤®‡≥ç‡≤Ø ‡≤°‡≥á‡≤ü‡≤æ ‡≤´‡≤æ‡≤∞‡≥ç‡≤Æ‡≥ç‡≤Ø‡≤æ‡≤ü‡≥ç');

      const dischargeData = data.daily.river_discharge;
      const threshold = 20;
      const latestDischarge = dischargeData[dischargeData.length - 1];

      setFloodRisk((latestDischarge / threshold) * 100);
      setFloodWarning(latestDischarge >= threshold);
      setError(null);
    } catch (err) {
      setError(err.message);
      setFloodRisk(0);
      setFloodWarning(false);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          fetchFloodData(position.coords.latitude, position.coords.longitude);
        },
        (err) => setError('‡≤∏‡≥ç‡≤•‡≤≥ ‡≤™‡≤§‡≥ç‡≤§‡≥Ü ‡≤Æ‡≤æ‡≤°‡≤≤‡≥Å ‡≤∏‡≤æ‡≤ß‡≥ç‡≤Ø‡≤µ‡≤æ‡≤ó‡≤≤‡≤ø‡≤≤‡≥ç‡≤≤')
      );
    } else {
      setError('‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤¨‡≥ç‡≤∞‡≥å‡≤∏‡≤∞‡≥ç ‡≤∏‡≥ç‡≤•‡≤≥ ‡≤∏‡≥á‡≤µ‡≥Ü‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≥Ü‡≤Ç‡≤¨‡≤≤‡≤ø‡≤∏‡≥Å‡≤µ‡≥Å‡≤¶‡≤ø‡≤≤‡≥ç‡≤≤');
    }
  }, []);

  useEffect(() => {
    const handleVoiceCommands = (event) => {
      const command = event.detail.toLowerCase();
      if (['‡≤ï‡≥É‡≤∑‡≤ø ‡≤™‡≥Å‡≤ü', '‡≤π‡≤ø‡≤Ç‡≤¶‡≥Ü ‡≤π‡≥ã‡≤ó‡≥Å', '‡≤Æ‡≥Å‡≤ñ‡≥ç‡≤Ø ‡≤™‡≥Å‡≤ü'].includes(command)) {
        navigate('/agriculture');
      } else if (['‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø ‡≤®‡≤µ‡≥Ä‡≤ï‡≤∞‡≤ø‡≤∏‡≥Å', '‡≤∞‡≤ø‡≤´‡≥ç‡≤∞‡≥Ü‡≤∂‡≥ç'].includes(command)) {
        window.location.reload();
      }
    };

    window.addEventListener('voiceCommand', handleVoiceCommands);
    return () => window.removeEventListener('voiceCommand', handleVoiceCommands);
  }, [navigate]);

  return (
    <div className="p-6 space-y-6">
      <h1 className="text-2xl font-bold mb-6">‡≤™‡≥ç‡≤∞‡≤µ‡≤æ‡≤π ‡≤é‡≤ö‡≥ç‡≤ö‡≤∞‡≤ø‡≤ï‡≥Ü ‡≤µ‡≥ç‡≤Ø‡≤µ‡≤∏‡≥ç‡≤•‡≥Ü</h1>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {/* Flood Risk Card */}
        <div className="bg-white rounded-lg shadow-lg p-6">
          <div className="flex items-center gap-3 mb-6">
            <span className="text-3xl">üíß</span>
            <h2 className="text-xl font-semibold">‡≤™‡≥ç‡≤∞‡≤µ‡≤æ‡≤π ‡≤Ö‡≤™‡≤æ‡≤Ø ‡≤Æ‡≥å‡≤≤‡≥ç‡≤Ø‡≤Æ‡≤æ‡≤™‡≤®</h2>
          </div>

          {loading ? (
            <div className="flex justify-center p-8">
              <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-emerald-500" />
            </div>
          ) : (
            <>
              {/* Risk Meter */}
              <div className="mb-6">
                <div className="h-4 bg-gray-200 rounded-full overflow-hidden">
                  <div 
                    style={{ width: `${Math.min(floodRisk, 100)}%` }}
                    className={`h-full transition-all duration-1000 ${
                      floodRisk > 75 ? 'bg-red-500' :
                      floodRisk > 50 ? 'bg-yellow-500' :
                      'bg-emerald-500'
                    }`}
                  />
                </div>
                <p className="text-center mt-2">
                  ‡≤Ö‡≤™‡≤æ‡≤Ø‡≤¶ ‡≤Æ‡≤ü‡≥ç‡≤ü: {Math.round(floodRisk)}%
                </p>
              </div>

              {/* Warning Message */}
              {floodWarning ? (
                <div className="bg-red-50 border border-red-200 rounded-lg p-4">
                  <div className="flex items-center gap-2">
                    <span className="text-xl">‚ö†Ô∏è</span>
                    <p className="text-red-700">
                      ‡≤π‡≥Ü‡≤ö‡≥ç‡≤ö‡≤ø‡≤® ‡≤™‡≥ç‡≤∞‡≤µ‡≤æ‡≤π ‡≤Ö‡≤™‡≤æ‡≤Ø‡≤µ‡≤ø‡≤¶‡≥Ü! ‡≤Æ‡≥Å‡≤Ç‡≤ú‡≤æ‡≤ó‡≥ç‡≤∞‡≤§‡≥Ü ‡≤µ‡≤π‡≤ø‡≤∏‡≤ø.
                    </p>
                  </div>
                  <div className="mt-4 space-y-2 text-red-600">
                    <p>‚Ä¢ ‡≤∏‡≥Å‡≤∞‡≤ï‡≥ç‡≤∑‡≤ø‡≤§ ‡≤∏‡≥ç‡≤•‡≤≥‡≤ï‡≥ç‡≤ï‡≥Ü ‡≤∏‡≥ç‡≤•‡≤≥‡≤æ‡≤Ç‡≤§‡≤∞‡≤ø‡≤∏‡≤≤‡≥Å ‡≤∏‡≤ø‡≤¶‡≥ç‡≤ß‡≤∞‡≤æ‡≤ó‡≤ø</p>
                    <p>‚Ä¢ ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤¶‡≤æ‡≤ñ‡≤≤‡≥Ü‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤∏‡≥Å‡≤∞‡≤ï‡≥ç‡≤∑‡≤ø‡≤§‡≤µ‡≤æ‡≤ó‡≤ø‡≤°‡≤ø</p>
                    <p>‚Ä¢ ‡≤§‡≥Å‡≤∞‡≥ç‡≤§‡≥Å ‡≤∏‡≤Ç‡≤™‡≤∞‡≥ç‡≤ï ‡≤∏‡≤Ç‡≤ñ‡≥ç‡≤Ø‡≥Ü‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≤∞‡≥Ü‡≤¶‡≤ø‡≤ü‡≥ç‡≤ü‡≥Å‡≤ï‡≥ä‡≤≥‡≥ç‡≤≥‡≤ø</p>
                  </div>
                </div>
              ) : (
                <div className="bg-emerald-50 border border-emerald-200 rounded-lg p-4">
                  <div className="flex items-center gap-2">
                    <span className="text-xl">‚úÖ</span>
                    <p className="text-emerald-700">
                      ‡≤∏‡≤æ‡≤Æ‡≤æ‡≤®‡≥ç‡≤Ø ‡≤™‡≥ç‡≤∞‡≤µ‡≤æ‡≤π ‡≤Ö‡≤™‡≤æ‡≤Ø ‡≤Æ‡≤ü‡≥ç‡≤ü.
                    </p>
                  </div>
                </div>
              )}
            </>
          )}
        </div>

        {/* Emergency Contacts */}
        <div className="bg-white rounded-lg shadow-lg p-6">
          <div className="flex items-center gap-3 mb-6">
            <span className="text-3xl">‚òéÔ∏è</span>
            <h2 className="text-xl font-semibold">‡≤§‡≥Å‡≤∞‡≥ç‡≤§‡≥Å ‡≤∏‡≤Ç‡≤™‡≤∞‡≥ç‡≤ï‡≤ó‡≤≥‡≥Å</h2>
          </div>

          <div className="space-y-4">
            <div className="p-3 bg-blue-50 rounded-lg">
              <div className="font-medium">‡≤∞‡≤æ‡≤ú‡≥ç‡≤Ø ‡≤§‡≥Å‡≤∞‡≥ç‡≤§‡≥Å ‡≤ï‡≥á‡≤Ç‡≤¶‡≥ç‡≤∞</div>
              <div className="text-xl font-bold">üìû 1070</div>
            </div>
            
            <div className="p-3 bg-blue-50 rounded-lg">
              <div className="font-medium">‡≤ú‡≤ø‡≤≤‡≥ç‡≤≤‡≤æ ‡≤§‡≥Å‡≤∞‡≥ç‡≤§‡≥Å ‡≤ï‡≥á‡≤Ç‡≤¶‡≥ç‡≤∞</div>
              <div className="text-xl font-bold">üìû 1077</div>
            </div>

            <div className="p-3 bg-blue-50 rounded-lg">
              <div className="font-medium">‡≤™‡≥ä‡≤≤‡≥Ä‡≤∏‡≥ç ‡≤®‡≤ø‡≤Ø‡≤Ç‡≤§‡≥ç‡≤∞‡≤£ ‡≤ï‡≥ä‡≤†‡≤°‡≤ø</div>
              <div className="text-xl font-bold">üìû 100</div>
            </div>

            <button 
              onClick={() => window.location.reload()}
              className="w-full mt-4 bg-emerald-600 text-white px-4 py-2 rounded-lg hover:bg-emerald-700"
            >
              ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø ‡≤®‡≤µ‡≥Ä‡≤ï‡≤∞‡≤ø‡≤∏‡≤ø
            </button>
          </div>
        </div>
      </div>

      {error && (
        <div className="mt-4 p-4 bg-red-50 border border-red-200 rounded-lg text-red-700">
          {error}
        </div>
      )}
    </div>
  );
};

export default FloodAlert;
